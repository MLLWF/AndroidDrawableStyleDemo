<?xml version="1.0" encoding="utf-8"?>

<!--scale标签-->

<!--使用scale标签可以对drawable进行缩放操作，和clip一样是通过设置level来控制缩放的比例。scale标签可以设置的属性如下：-->

<!--android:drawable 指定drawable资源，如果不设置该属性，也可以定义drawable类型的子标签-->
<!--android:scaleHeight 设置可缩放的高度，用百分比表示，格式为XX%，0%表示不做任何缩放，50%表示只能缩放一半-->
<!--android:scaleWidth 设置可缩放的宽度，用百分比表示，格式为XX%，0%表示不做任何缩放，50%表示只能缩放一半-->
<!--android:scaleGravity 设置drawable缩放后的位置，取值和bitmap标签的一样，就不一一列举说明了，不过默认值是left-->
<!--android:useIntrinsicSizeAsMinimum 设置drawable原有尺寸作为最小尺寸，设为true时，缩放基本无效，API Level最低要求为11-->


<scale xmlns:android="http://schemas.android.com/apk/res/android"
       android:drawable="@drawable/ic_launcher"
       android:scaleGravity="bottom"
       android:scaleHeight="80%"
       android:scaleWidth="0%"
       android:useIntrinsicSizeAsMinimum="false"
    >

    <!--经过测试有几点需要注意：-->
    <!--1、scale只会缩小图片，当设置百分比为0或者为负数的时候不会进行缩放，保持原有大小。-->
    <!--2、scale缩小比例是由百分比和level共同控制的，并且百分比和level成反比。-->
    <!--其实就是百分比越大缩小的比例就越大，level越小缩小的比例就越小（当level为0时图片不见，当level为10000时不会进行缩放），-->
    <!--比个例子，当百分比是50%的时候，level越小缩小的程度就越大，level越大缩小的程度就越小当level为10000时不会缩放。-->
    <!--反之，当level固定的时候，百分比越大缩小越大，反之亦然！-->

</scale>